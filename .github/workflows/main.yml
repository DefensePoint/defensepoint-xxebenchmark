# Guidelines and helpers to build and test applications:
# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-java-with-maven
# https://docs.github.com/en/free-pro-team@latest/actions/guides/storing-workflow-data-as-artifacts
# https://github.com/actions/setup-java
# https://github.com/actions/setup-java#matrix-testing
# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast
# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idcontinue-on-error
# https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions

name: Build and test Java applications

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  BUILD_APPLICATION:
    name: Build Java application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to branch
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build application with Maven
        run: mvn -B package --file pom.xml
      - name: Create artifactory directory
        run: mkdir staging && cp target/*.jar staging
      - name: Upload application to Github artifactory
        uses: actions/upload-artifact@v2
        with:
          name: app_build_package
          path: staging
          retention-days: 1

  TEST_APPLICATION:
    name: Test application with OpenJDK ${{ matrix.java }}
    needs: BUILD_APPLICATION
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # java: [ 1.8, 1.6, 6.0.83, 7, 7.0.181, 8, 8.0.192, 9.0.x, 10, 11.0.x, 11.0.3, 12, 13 ]
        java: [ 7, 8, 11, 12, 14, 15 ]
    steps:
      - name: Download builded app from artifactory
        uses: actions/download-artifact@v2
        with:
          name: app_build_package
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Run application test
        run: |
          set +e
          java -jar $(ls xxebenchmark-*.jar)
          set -e
      - name: Create artifactory directory for result
        run: mkdir result && cp output.csv result
      - name: Upload test result to Github artifactory
        uses: actions/upload-artifact@v2
        with:
          name: test_result_${{ matrix.java }}
          path: result
          retention-days: 1
        # if: always()
